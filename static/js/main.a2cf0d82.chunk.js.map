{"version":3,"sources":["auth/config.js","Images/Marvel_Logo.svg.png","auth/Authcontext.js","auth/PrivateRoute.js","Context/ContextMarvel.js","Pages/Login/Login.js","Pages/Join/Join.js","Images/loading-buffering.gif","Services/marvelAPI.js","Components/NavBar/NavBar.js","Pages/MarvelComics/MarvelComics.js","Pages/MarvelCharacters/MarvelCharacters.js","Context/ProviderMarvel.js","Pages/Perfil/Perfil.js","Pages/NotFound/NotFound.js","routes.js","App.js","index.js"],"names":["authConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","AuthContext","createContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","auth","onAuthStateChanged","Fragment","className","src","imgLogo","alt","Provider","value","PrivateRoute","props","RouteComponent","component","other","useContext","render","routeProps","to","ContextMarvel","Login","history","useHistory","emailRef","useRef","passRef","setOnOff","id","method","action","htmlFor","name","required","type","placeholder","onClick","e","email","password","preventDefault","push","current","signInWithEmailAndPassword","then","catch","error","console","log","code","message","alert","href","Join","createUserWithEmailAndPassword","md5","require","fetch","timestamp","Math","floor","Date","now","publicKey","process","hash","Navbar","titlePage","onOff","sidebar","setSidebar","showSidebar","color","signOut","MarvelCharacters","comics","setComics","setTitlePage","fetchComics","a","response","json","result","data","results","loadingGif","map","comic","title","description","thumbnail","extension","path","creators","items","Card","style","width","Img","variant","Body","Title","Text","ListGroup","ListGroupItem","creator","characters","setCharacters","fetchCharacters","ProviderMarvel","Perfil","novalidate","aria-describedby","NotFound","Routes","MarvelComics","exact","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a2cf0d82.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyCLF_894F_otzEap4ktre7NzruPvgbC8jQ\",\n  authDomain: \"marvel-app-93881.firebaseapp.com\",\n  databaseURL: \"https://marvel-app-93881-default-rtdb.firebaseio.com\",\n  projectId: \"marvel-app-93881\",\n  storageBucket: \"marvel-app-93881.appspot.com\",\n  messagingSenderId: \"587401231154\",\n  appId: \"1:587401231154:web:b56999d8306ae1e832f52b\",\n  measurementId: \"G-BXCCN53RD7\"\n};\n\nexport const authConfig = firebase.initializeApp(config);\n\nexport const firebaseDb = authConfig.database().ref();\n\n// export const firebaseDb = authConfig();\n// export const firebaseDb = authConfig.database().ref();\n\n  // const createUser = (email, password) => {\n  //   const data = {\n  //     email,\n  //     password,\n  //   }\n  //   return authConfig.database().ref().child('users').push(data);\n  // }\n  ","export default __webpack_public_path__ + \"static/media/Marvel_Logo.svg.bcea5054.png\";","import React, { useEffect, useState, createContext } from 'react';\nimport { authConfig } from './config';\n\nimport './style.css';\nimport imgLogo from '../Images/Marvel_Logo.svg.png';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    authConfig.auth().onAuthStateChanged((user) => {\n      setUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return (\n    <React.Fragment>\n      <img\n        className=\"img-logo\"\n        src={ imgLogo }\n        alt=\"Marvel\"\n      />\n    </React.Fragment>\n    )\n  }\n  return (\n    <AuthContext.Provider value={{ user }}>{children}</AuthContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Authcontext';\n\nexport const PrivateRoute = (props) => {\n  const { component: RouteComponent, ...other } = props;\n  const { user } = useContext(AuthContext);\n  return (\n    <Route\n      {...other}\n      render={(routeProps) =>\n        user ? <RouteComponent {...routeProps} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n","import { createContext } from 'react';\n\nconst ContextMarvel = createContext();\n\nexport default ContextMarvel;","import { useHistory } from 'react-router-dom';\nimport { useContext, useRef } from 'react';\nimport firebase from 'firebase/app';\nimport './style.css'\nimport ContextMarvel from '../../Context/ContextMarvel';\n\nfunction Login() {\n  const history = useHistory();\n  const emailRef = useRef(null);\n  const passRef = useRef(null);\n\n  const { setOnOff } = useContext(ContextMarvel);\n\n  const loginAuth = (email, password) => {\n    firebase.auth().signInWithEmailAndPassword(email, password)\n    .then(() => {\n      setOnOff('on');\n    })\n    .catch((error) => {\n      console.log(error.code, error.message);\n      return alert(error.message);\n    });\n  }\n\n  return (\n    <section>\n      <div id=\"login\">\n        <form method=\"post\" action=\"\"> \n          <h1>Login</h1> \n          <p> \n            <label htmlFor=\"email_login\">Seu e-mail</label>\n            <input\n              id=\"email_login\"\n              name=\"email_login\"\n              required\n              type=\"text\"\n              placeholder=\"exemplo@email.com\"\n              ref={emailRef}\n            />\n          </p>\n           \n          <p> \n            <label htmlFor=\"senha_login\">Sua senha</label>\n            <input\n              id=\"senha_login\"\n              name=\"senha_login\"\n              required\n              type=\"password\"\n              placeholder=\"ex. 123456789\"\n              ref={passRef}\n            /> \n          </p>\n           \n          <p> \n            <input type=\"checkbox\" name=\"manterlogado\" id=\"manterlogado\" value=\"\" /> \n            <label htmlFor=\"manterlogado\">Manter-me logado</label>\n          </p>\n          \n          <button\n            className=\"join-buttom\"\n            type=\"submit\"\n            value=\"Logar\"\n            onClick={(e) => {\n              e.preventDefault();\n              history.push('/marvelcharacters');\n              loginAuth(emailRef.current.value, passRef.current.value);\n              alert('Bem-vindo ' + emailRef.current.value);\n            } }\n          >\n            Logar\n          </button>\n          \n          <p className=\"link\">\n            Ainda não tem conta?\n            <a href=\"/join\">Cadastre-se</a>\n          </p>\n        </form>\n      </div>\n    </section>\n  )\n}\n\nexport default Login;","import React, { useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport firebase from 'firebase/app';\nimport './style.css';\n\nfunction Join() {\n  const history = useHistory();\n  const emailRef = useRef(null);\n  const passRef = useRef(null);\n\n  const createUser = (email, password) => {\n    return firebase.auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        alert('Bem-vindo ' + email);\n        history.push('/marvelcharacters');\n      })\n      .catch((error) => {\n        console.log(error.code, error.message);\n        alert(error.message);\n      });\n  }\n\n  return (\n    <section>\n      <div id=\"cadastro\">\n        <form method=\"POST\" action=\"\"> \n          <h1>Cadastro</h1> \n           \n          <p> \n            <label htmlFor=\"nome_cad\">Seu nome</label>\n            <input\n              id=\"nome_cad\"\n              name=\"nome_cad\"\n              type=\"text\"\n              required\n              placeholder=\"ex. Fulano de Tal\"\n            />\n          </p>\n           \n          <p> \n            <label htmlFor=\"email_cad\">Seu e-mail</label>\n            <input\n              id=\"email_cad\"\n              name=\"email_cad\"\n              required\n              type=\"email\"\n              placeholder=\"exemplo@email.com\"\n              ref={emailRef}\n            /> \n          </p>\n           \n          <p> \n            <label htmlFor=\"senha_cad\">Sua senha</label>\n            <input\n              id=\"senha_cad\"\n              name=\"senha_cad\"\n              required\n              type=\"password\"\n              placeholder=\"ex. 123456789\"\n              ref={passRef}\n            />\n          </p>\n\n          <button\n            className=\"join-buttom\"\n            type=\"\"\n            value=\"Cadastrar\"\n            onClick={ (e) => {\n              e.preventDefault();\n              createUser(emailRef.current.value, passRef.current.value);\n            } }\n          >\n            Cadastrar\n          </button>\n           \n          <p className=\"link\">  \n            Já tem conta?\n            <a href=\"/\"> Ir para Login </a>\n          </p>\n        </form>\n      </div>\n    </section>\n  )\n}\n\nexport default Join;\n","export default __webpack_public_path__ + \"static/media/loading-buffering.c7d9f081.gif\";","const md5 = require(\"md5\");\nconst fetch = require(\"node-fetch\");\nconst timestamp = Math.floor(Date.now() / 1000);\nconst publicKey = process.env.REACT_APP_PUBLIC_KEY;\nconst privateKey = process.env.REACT_APP_PRIVATE_KEY;\nconst hash = md5(timestamp + privateKey + publicKey);\nconst baseURLcharacters = \"https://gateway.marvel.com:443/v1/public/characters?ts=\";\nconst baseURLcomics = \"https://gateway.marvel.com:443/v1/public/comics?ts=\";\n\nexport const getCharacters = () => {\n  const result = fetch(\n    `${baseURLcharacters}${timestamp}&apikey=${publicKey}&hash=${hash}`,\n  )\n    .then((response) => response.json())\n    .then((result) => (result.data.results));\n  return result;\n};\n\nexport const getComics = () => {\n  const result = fetch(\n    `${baseURLcomics}${timestamp}&apikey=${publicKey}&hash=${hash}`,\n  )\n    .then((response) => response.json())\n    .then((result) => (result.data.results));\n  return result;\n};\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport { IconContext } from 'react-icons';\nimport * as IoIcons from 'react-icons/io';\nimport { RiLogoutBoxFill } from 'react-icons/ri';\nimport { FaAddressCard } from 'react-icons/fa';\nimport { BiMessageAltDetail } from 'react-icons/bi';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\n// import { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport ContextMarvel from '../../Context/ContextMarvel';\n\nfunction Navbar() {\n  const history = useHistory();\n  const { \n    titlePage,\n    onOff,\n  } = useContext(ContextMarvel);\n  const [sidebar, setSidebar] = useState(false);\n  const showSidebar = () => setSidebar(!sidebar);\n\n  const { setOnOff } = useContext(ContextMarvel);\n\n  const logoutOff = () => {\n    firebase.auth().signOut()\n    .then(() => {\n      setOnOff('');\n    })\n    .catch((error) => {\n      console.log(error.code, error.message);\n      return alert(error.message);\n    });\n  }\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#fff' }}>\n        <div className='navbar'>\n          <div>\n            <Link to='#' className='menu-bars'>\n              <FaIcons.FaBars onClick={showSidebar} />\n            </Link>\n          </div>\n          <div className=\"header-text\">\n            <h1>{ titlePage }</h1>\n          </div>\n          <div className={ onOff } />\n        </div>\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n          <ul className='nav-menu-items' onClick={showSidebar}>\n            <li className='navbar-toggle'>\n              <Link to='#' className='menu-bars'>\n                <AiIcons.AiOutlineClose />\n              </Link>\n            </li>\n            <li className={'nav-text'}>\n              <Link to={'/marvelcharacters'}>\n                <BiMessageAltDetail />\n                <span>{'Marvel Characters'}</span>\n              </Link>\n            </li>\n            <li className={'nav-text'}>\n              <Link to={'/marvelcomics'}>\n                <IoIcons.IoMdPeople />\n                <span>{'Marvel Comics'}</span>\n              </Link>\n            </li>\n            <li className={'nav-text'}>\n              <Link to={'/perfil'}>\n                <FaAddressCard />\n                <span>{'Perfil'}</span>\n              </Link>\n            </li>\n            <li\n              className={'nav-text'}\n              onClick={ (e) => {\n                e.preventDefault();\n                logoutOff();\n                history.push('/');\n                alert('Até logo :)');\n              } }\n            >\n              <Link to={'/'}>\n                <RiLogoutBoxFill />\n                <span>Sair</span>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;\n","import React, { useContext, useEffect } from 'react';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nimport ContextMarvel from '../../Context/ContextMarvel';\nimport loadingGif from '../../Images/loading-buffering.gif';\nimport { getComics } from '../../Services/marvelAPI';\nimport Navbar from '../../Components/NavBar/NavBar';\n\nconst MarvelCharacters = () => {\n  const { \n    comics, setComics,\n    loading, setLoading,\n    setTitlePage,\n   } = useContext(ContextMarvel);\n\n  useEffect(() => {\n    const fetchComics = async () => {\n      const result = await getComics();\n      setComics(result);\n      setLoading(false);\n    }\n    setTitlePage('Marvel Comics');\n    fetchComics();\n  }, [setComics, setLoading, setTitlePage]);\n\n  if (loading) {\n    return (\n      <img\n        src={ loadingGif }\n        alt=\"Gif de Loading\"\n      />\n    )\n  }\n  return (\n    <section className=\"w-100 bg-dark d-flex flex-wrap\">\n      <Navbar />\n      { comics.map(comic => {\n        const { title, description } = comic;\n        const { extension, path } = comic.thumbnail;\n        const creators = comic.creators.items;\n        return (\n          <Card className=\"m-4\" style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={`${path}.${extension}`} />\n            <Card.Body>\n              <Card.Title>{title}</Card.Title>\n              <Card.Text>\n                { description }\n              </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>CRIADORES</ListGroupItem>\n              { creators.map(creator => (\n                <ListGroupItem>{ creator.name }</ListGroupItem>\n              )) }\n            </ListGroup>\n          </Card>\n        )\n      }) }\n    </section>\n  );\n};\n\nexport default MarvelCharacters;","import React, { useContext, useEffect } from 'react';\nimport { Card  } from 'react-bootstrap';\n\nimport ContextMarvel from '../../Context/ContextMarvel';\nimport loadingGif from '../../Images/loading-buffering.gif';\nimport { getCharacters } from '../../Services/marvelAPI';\nimport Navbar from '../../Components/NavBar/NavBar';\n\nconst MarvelCharacters = () => {\n  const { \n    loading, setLoading,\n    characters, setCharacters,\n    setTitlePage,\n   } = useContext(ContextMarvel);\n\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      const result = await getCharacters();\n      setCharacters(result);\n      setLoading(false);\n      setTitlePage('Marvel Characters');\n    }\n    fetchCharacters();\n  }, [setCharacters, setLoading, setTitlePage]);\n\n  if (loading) {\n    return (\n      <img\n        src={ loadingGif }\n        alt=\"Gif de Loading\"\n      />\n    )\n  }\n  return (\n    <section className=\"w-100 bg-dark d-flex flex-wrap\">\n      <Navbar />\n      { characters.map(comic => {\n        const { name, description } = comic;\n        const { extension, path } = comic.thumbnail;\n        return (\n          <Card className=\"m-4\" style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={`${path}.${extension}`} />\n            <Card.Body>\n              <Card.Title>{name}</Card.Title>\n              <Card.Text>\n                { description }\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        )\n      }) }\n    </section>\n  );\n};\n\nexport default MarvelCharacters;","import { useState } from 'react';\nimport ContextMarvel from './ContextMarvel';\n\nfunction ProviderMarvel({ children }) {\n  const [titlePage, setTitlePage] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [comics, setComics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [onOff, setOnOff] = useState('');\n\n  return (\n    <ContextMarvel.Provider\n      value={\n        {\n          titlePage, setTitlePage,\n          loading, setLoading,\n          characters, setCharacters,\n          comics, setComics,\n          onOff, setOnOff,\n        }\n      }\n    >\n      {children}\n    </ContextMarvel.Provider>\n  );\n}\n\nexport default ProviderMarvel;","import React, { useContext, useEffect } from 'react';\n\nimport ContextMarvel from '../../Context/ContextMarvel';\nimport loadingGif from '../../Images/loading-buffering.gif';\nimport Navbar from '../../Components/NavBar/NavBar';\n\nconst Perfil = () => {\n  const { \n    loading, setLoading,\n    setTitlePage,\n   } = useContext(ContextMarvel);\n\n  useEffect(() => {\n    const fetchComics = async () => {\n      setLoading(false);\n    }\n    setTitlePage('Perfil');\n    fetchComics();\n  }, [setLoading, setTitlePage]);\n\n  if (loading) {\n    return (\n      <img\n        src={ loadingGif }\n        alt=\"Gif de Loading\"\n      />\n    )\n  }\n  return (\n    <section className=\"w-100 bg-dark\">\n      <Navbar />\n      <form className=\"needs-validation\" novalidate>\n      <div className=\"form-row\">\n        <div className=\"col-md-4 mb-3\">\n          <label htmlFor=\"validationCustom01\">Primeiro nome</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"validationCustom01\"\n            placeholder=\"Nome\"\n            value=\"Mark\"\n            required\n          />\n          <div className=\"valid-feedback\">\n            Tudo certo!\n          </div>\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <label htmlFor=\"validationCustom02\">Sobrenome</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"validationCustom02\"\n            placeholder=\"Sobrenome\"\n            value=\"Otto\"\n            required\n          />\n          <div className=\"valid-feedback\">\n            Tudo certo!\n          </div>\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <label htmlFor=\"validationCustomUsername\">Usuário</label>\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n            </div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"validationCustomUsername\"\n              placeholder=\"Usuário\"\n              aria-describedby=\"inputGroupPrepend\"\n              required\n            />\n            <div className=\"invalid-feedback\">\n              Por favor, escolha um nome de usuário.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <div className=\"col-md-6 mb-3\">\n          <label htmlFor=\"validationCustom03\">Cidade</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"validationCustom03\"\n            placeholder=\"Cidade\"\n            required\n          />\n          <div className=\"invalid-feedback\">\n            Por favor, informe uma cidade válida.\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <label htmlFor=\"validationCustom04\">Estado</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"validationCustom04\"\n            placeholder=\"Estado\"\n            required\n          />\n          <div className=\"invalid-feedback\">\n            Por favor, informe um estado válido.\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <label htmlFor=\"validationCustom05\">CEP</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"validationCustom05\"\n            placeholder=\"CEP\"\n            required\n          />\n          <div className=\"invalid-feedback\">\n            Por favor, informe um CEP válido.\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <div className=\"form-check\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value=\"\"\n            id=\"invalidCheck\"\n            required\n          />\n          <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\n            Concordo com os termos e condições\n          </label>\n          <div className=\"invalid-feedback\">\n            Você deve concordar, antes de continuar.\n          </div>\n        </div>\n      </div>\n      <button className=\"btn btn-primary\" type=\"submit\">Atualizar cadastro</button>\n    </form>\n  </section>\n  );\n};\n\nexport default Perfil;\n","import React from 'react';\n\nimport './style.css';\n\nconst NotFound = () => {\n  return (\n    <section className=\"w-100 bg-dark not-found\">\n      <div className=\"noise\"></div>\n      <div className=\"overlay\"></div>\n      <div className=\"terminal\">\n      <h1>Error <span className=\"errorcode\">404</span></h1>\n      <p className=\"output\">The page you are looking for might have been removed, had its name changed or is temporarily unavailable.</p>\n      <p className=\"output\">Please try to <a href=\"/\">go back</a> or <a href=\"/\">return to the homepage</a>.</p>\n      <p className=\"output\">Good luck.</p>\n    </div>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import { Route, Switch } from 'react-router';\nimport { PrivateRoute } from './auth/PrivateRoute';\n\nimport Login from './Pages/Login/Login';\nimport Join from './Pages/Join/Join';\nimport MarvelComics from './Pages/MarvelComics/MarvelComics';\nimport MarvelCharacters from './Pages/MarvelCharacters/MarvelCharacters';\nimport ProviderMarvel from './Context/ProviderMarvel';\nimport Perfil from './Pages/Perfil/Perfil';\nimport NotFound from './Pages/NotFound/NotFound';\n\n\nfunction Routes() {\n  return (\n    <ProviderMarvel>\n      <PrivateRoute path=\"/perfil\" component={ Perfil } />\n      <PrivateRoute path=\"/marvelcharacters\" component={ MarvelCharacters } />\n      <PrivateRoute path=\"/marvelcomics\" component={ MarvelComics } />\n      <Switch>\n        <Route path=\"/join\" component={ Join } />\n        <Route exact path=\"/\" component={ Login } />\n        <Route component={ NotFound } />\n      </Switch>\n    </ProviderMarvel>\n  );\n}\n\nexport default Routes;\n","import Routes from './routes';\nimport { AuthProvider } from './auth/Authcontext';\n\nfunction App() {\n  return (\n    <AuthProvider>\n        <Routes />\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}