{"version":3,"sources":["Pages/Login/Login.js","Pages/Join/Join.js","Context/ContextMarvel.js","Images/loading-buffering.gif","Services/marvelAPI.js","Pages/MarvelComics/MarvelComics.js","Pages/MarvelCharacters/MarvelCharacters.js","Context/ProviderMarvel.js","routes.js","auth/config.js","Images/Marvel_Logo.svg.png","auth/Authcontext.js","App.js","index.js"],"names":["Login","history","useHistory","id","method","action","htmlFor","name","required","type","placeholder","value","onClick","push","className","href","Join","ContextMarvel","createContext","md5","require","fetch","timestamp","Math","floor","Date","now","publicKey","process","hash","MarvelCharacters","useContext","comics","setComics","loading","setLoading","useEffect","a","then","response","json","result","data","results","fetchComics","src","loadingGif","alt","map","comic","title","description","thumbnail","extension","path","creators","items","Card","style","width","Img","variant","Body","Title","Text","ListGroup","ListGroupItem","creator","characters","setCharacters","console","log","fetchCharacters","ProviderMarvel","children","useState","setTitle","Provider","Routes","component","MarvelComics","exact","authConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","AuthContext","AuthProvider","user","setUser","auth","onAuthStateChanged","Fragment","imgLogo","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4381bf82.chunk.js","sourcesContent":["import { useHistory } from 'react-router-dom';\n\n// function LoginForm() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const history = useHistory();\n// import { useContext, useEffect } from 'react';\n// import { Form, Button, FormGroup, Label, Input } from 'reactstrap';\n// import { FacebookLoginButton } from 'react-social-login-buttons';\n\n// import ContextMarvel from '../../Context/ContextMarvel';\n\n// import { getComics } from '../services/marvelAPI';\n\nimport './style.css'\n\nfunction Login() {\n  const history = useHistory();\n  // const {\n  //   setCharacters,\n  // } = useContext(ContextMarvel);\n  // useEffect(()=>{\n  //   const fetchCharacters = async () =>{\n  //     const endpoint = 'https://rickandmortyapi.com/api/character';\n  //     const {results} = await fetch(endpoint).then(res => res.json());\n  //     console.log(results);\n  //     setCharacters(results);\n\n  //   }\n  //   fetchCharacters();\n  // }, [setCharacters]);\n\n  return (\n    <section>\n      <div id=\"login\">\n        <form method=\"post\" action=\"\"> \n          <h1>Login</h1> \n          <p> \n            <label htmlFor=\"email_login\">Seu e-mail</label>\n            <input id=\"email_login\" name=\"email_login\" required type=\"text\" placeholder=\"exemplo@email.com\"/>\n          </p>\n           \n          <p> \n            <label htmlFor=\"senha_login\">Sua senha</label>\n            <input id=\"senha_login\" name=\"senha_login\" required type=\"password\" placeholder=\"ex. 123456789\" /> \n          </p>\n           \n          <p> \n            <input type=\"checkbox\" name=\"manterlogado\" id=\"manterlogado\" value=\"\" /> \n            <label htmlFor=\"manterlogado\">Manter-me logado</label>\n          </p>\n           \n          <p> \n            <input\n              type=\"submit\"\n              value=\"Logar\"\n              onClick={ () => {\n                history.push('/marvelcharacters');\n              } }\n            /> \n          </p>\n           \n          <p className=\"link\">\n            Ainda não tem conta?\n            <a href=\"/#/join\">Cadastre-se</a>\n          </p>\n        </form>\n      </div>\n    </section>\n  )\n}\n\nexport default Login;","import './style.css'\n\nfunction Join() {\n  return (\n    <section>\n      <div id=\"cadastro\">\n        <form method=\"post\" action=\"\"> \n          <h1>Cadastro</h1> \n           \n          <p> \n            <label htmlFor=\"nome_cad\">Seu nome</label>\n            <input id=\"nome_cad\" name=\"nome_cad\" required=\"required\" type=\"text\" placeholder=\"ex. Fulano de Tal\" />\n          </p>\n           \n          <p> \n            <label htmlFor=\"email_cad\">Seu e-mail</label>\n            <input id=\"email_cad\" name=\"email_cad\" required=\"required\" type=\"email\" placeholder=\"exemplo@email.com\"/> \n          </p>\n           \n          <p> \n            <label htmlFor=\"senha_cad\">Sua senha</label>\n            <input id=\"senha_cad\" name=\"senha_cad\" required=\"required\" type=\"password\" placeholder=\"ex. 123456789\"/>\n          </p>\n           \n          <p> \n            <input type=\"submit\" value=\"Cadastrar\"/> \n          </p>\n           \n          <p className=\"link\">  \n            Já tem conta?\n            <a href=\"/\"> Ir para Login </a>\n          </p>\n        </form>\n      </div>\n    </section>\n  )\n}\n\nexport default Join;\n","import { createContext } from 'react';\n\nconst ContextMarvel = createContext();\n\nexport default ContextMarvel;","export default __webpack_public_path__ + \"static/media/loading-buffering.c7d9f081.gif\";","const md5 = require(\"md5\");\nconst fetch = require(\"node-fetch\");\nconst timestamp = Math.floor(Date.now() / 1000);\nconst publicKey = process.env.REACT_APP_PUBLIC_KEY;\nconst privateKey = process.env.REACT_APP_PRIVATE_KEY;\nconst hash = md5(timestamp + privateKey + publicKey);\nconst baseURLcharacters = \"https://gateway.marvel.com:443/v1/public/characters?ts=\";\nconst baseURLcomics = \"https://gateway.marvel.com:443/v1/public/comics?ts=\";\n\nexport const getCharacters = () => {\n  const result = fetch(\n    `${baseURLcharacters}${timestamp}&apikey=${publicKey}&hash=${hash}`,\n  )\n    .then((response) => response.json())\n    .then((result) => (result.data.results));\n  return result;\n};\n\nexport const getComics = () => {\n  const result = fetch(\n    `${baseURLcomics}${timestamp}&apikey=${publicKey}&hash=${hash}`,\n  )\n    .then((response) => response.json())\n    .then((result) => (result.data.results));\n  return result;\n};\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nimport ContextMarvel from '../../Context/ContextMarvel';\nimport loadingGif from '../../Images/loading-buffering.gif';\nimport { getComics } from '../../Services/marvelAPI';\n\nconst MarvelCharacters = () => {\n  const { \n    comics, setComics,\n    loading, setLoading,\n   } = useContext(ContextMarvel);\n\n  useEffect(() => {\n    const fetchComics = async () => {\n      const result = await getComics();\n      setComics(result);\n      setLoading(false);\n    }\n    fetchComics();\n  }, [setComics, setLoading]);\n\n  if (loading) {\n    return (\n      <img\n        src={ loadingGif }\n        alt=\"Gif de Loading\"\n      />\n    )\n  }\n  return (\n    <section className=\"w-100 bg-dark d-flex flex-wrap\">\n      {/* <Header /> */}\n      { comics.map(comic => {\n        const { title, description } = comic;\n        const { extension, path } = comic.thumbnail;\n        const creators = comic.creators.items;\n        return (\n          <Card className=\"m-4\" style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={`${path}.${extension}`} />\n            <Card.Body>\n              <Card.Title>{title}</Card.Title>\n              <Card.Text>\n                { description }\n              </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>CRIADORES</ListGroupItem>\n              { creators.map(creator => (\n                <ListGroupItem>{ creator.name }</ListGroupItem>\n              )) }\n            </ListGroup>\n          </Card>\n        )\n      }) }\n      {/* <Footer /> */}\n    </section>\n  );\n};\n\nexport default MarvelCharacters;","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nimport ContextMarvel from '../../Context/ContextMarvel';\nimport loadingGif from '../../Images/loading-buffering.gif';\nimport { getCharacters, getComics } from '../../Services/marvelAPI';\n\nconst MarvelCharacters = () => {\n  const { \n    loading, setLoading,\n    characters, setCharacters,\n   } = useContext(ContextMarvel);\n\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      const result = await getCharacters();\n      console.log(result);\n      setCharacters(result);\n      setLoading(false);\n    }\n    fetchCharacters();\n  }, [setCharacters, setLoading]);\n\n  if (loading) {\n    return (\n      <img\n        src={ loadingGif }\n        alt=\"Gif de Loading\"\n      />\n    )\n  }\n  return (\n    <section className=\"w-100 bg-dark d-flex flex-wrap\">\n      {/* <Header /> */}\n      { characters.map(comic => {\n        const { name, description } = comic;\n        const { extension, path } = comic.thumbnail;\n        // const creators = comic.creators.items;\n        return (\n          <Card className=\"m-4\" style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={`${path}.${extension}`} />\n            <Card.Body>\n              <Card.Title>{name}</Card.Title>\n              <Card.Text>\n                { description }\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        )\n      }) }\n      {/* <Footer /> */}\n    </section>\n  );\n};\n\nexport default MarvelCharacters;","import { useState } from 'react';\nimport ContextMarvel from './ContextMarvel';\n\nfunction ProviderMarvel({ children }) {\n  const [title, setTitle] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [comics, setComics] = useState([]);\n  const [loading, setLoading,] = useState(true);\n\n  return (\n    <ContextMarvel.Provider\n      value={\n        {\n          title, setTitle,\n          loading, setLoading,\n          characters, setCharacters,\n          comics, setComics,\n        }\n      }\n    >\n      {children}\n    </ContextMarvel.Provider>\n  );\n}\n\nexport default ProviderMarvel;","import { Route, Switch } from 'react-router';\n// import { PrivateRoute } from './auth/PrivateRoute';\n\nimport Login from './Pages/Login/Login';\nimport Join from './Pages/Join/Join';\nimport MarvelComics from './Pages/MarvelComics/MarvelComics';\nimport MarvelCharacters from './Pages/MarvelCharacters/MarvelCharacters';\nimport ProviderMarvel from './Context/ProviderMarvel';\n\n\nfunction Routes() {\n  return (\n    <ProviderMarvel>\n      <Switch>\n        <Route path=\"/join\" component={ Join } />\n        <Route path=\"/marvelcharacters\" component={ MarvelCharacters } />\n        <Route path=\"/marvelcomics\" component={ MarvelComics } />\n        <Route exact path=\"/\" component={ Login } />\n      </Switch>\n    </ProviderMarvel>\n  );\n}\n\nexport default Routes;\n","import firebase from 'firebase';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nexport const authConfig = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n});\n\nexport const firebaseDb = authConfig.database().ref();\n","export default __webpack_public_path__ + \"static/media/Marvel_Logo.svg.bcea5054.png\";","import React, { useEffect, useState, createContext } from 'react';\nimport { authConfig } from './config';\n\nimport './style.css';\nimport imgLogo from '../Images/Marvel_Logo.svg.png';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    authConfig.auth().onAuthStateChanged((user) => {\n      setUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return (\n    <React.Fragment>\n      <img\n        className=\"img-logo\"\n        src={ imgLogo }\n        alt=\"Marvel\"\n      />\n    </React.Fragment>\n    )\n  }\n  return (\n    <AuthContext.Provider value={{ user }}>{children}</AuthContext.Provider>\n  );\n};\n","import Routes from './routes';\nimport { AuthProvider } from './auth/Authcontext';\n\nfunction App() {\n  return (\n    <AuthProvider>\n        <Routes />\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}